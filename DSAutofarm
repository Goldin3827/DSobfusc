--lol
local function rs()
    workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
    print("fire!")
end

local plr = game.Players.LocalPlayer

while not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") do
    rs()
    wait(0.1) 
end

rs()

wait(1)

print(plr.Character.HumanoidRootPart) 

--PROPERTIES										PROPERTIES													PROPERTIES			

getgenv().autorejoin = getgenv().autorejoin

local plr = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')

if not plr then
	workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
    wait(3)
	plr = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
	return
    else
    print("Player found!")
end

local VirtualUser = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "LOAD: ANTI AFK",
    Text = "WizzoWorkspace",
    Button1 = "Okay",
    Duration = 1
})

local INF_STATS = true

local function contains(tbl, value)
	for _, v in ipairs(tbl) do
		if v == value then
			return true
		end
	end
	return false
end

local function parseRegionBonus(str)
	local regions = {}
	for region in string.gmatch(str, '%b""') do
		table.insert(regions, region:sub(2, -2))
	end
	return regions
end


local tween_s = game:GetService('TweenService')
local tweeninfo = TweenInfo.new(45, Enum.EasingStyle.Linear)


local Workspace = game:GetService("Workspace")
local bool teleporting_complete = true

function bypass_teleport(c,v)
	plr = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
	local cf = CFrame.new(v)
	local a = tween_s:Create(c, tweeninfo, {CFrame=cf})
	a:Play()
	teleporting_complete = false
	a.Completed:Wait()
	print('Teleporting Done!')
	teleporting_complete = true
end

repeat wait() until getgenv().FarmSpot ~= nil
getgenv().FarmSpot = getgenv().FarmSpot
print(getgenv().FarmSpot)
--       END PROPERTIES                      END PROPERTIES                      END PROPERTIES                      

if plr then
    local distance = (plr.Position - FarmSpot).magnitude
    if distance >= 40 then
        bypass_teleport(plr,FarmSpot)
    else
        print("Perfect Distance!")
        game:GetService("StarterGui"):SetCore("SendNotification", {
   		 	Title = "LOAD: REGION BONUS SPOOFER",
    		Text = "WizzoWorkspace",
    		Button1 = "Okay",
    		Duration = 1
		})
    end
end

loadstring(game:HttpGet("https://pastebin.com/raw/8dsvYWtb"))()
        game:GetService("StarterGui"):SetCore("SendNotification", {
   		 	Title = "LOAD: PERFORMANCE ENHANCER",
    		Text = "WizzoWorkspace",
    		Button1 = "Okay",
    		Duration = 1
		})

workspace:WaitForChild("GameEvents"):WaitForChild("ClaimDailyLogin"):FireServer()
        game:GetService("StarterGui"):SetCore("SendNotification", {
   		 	Title = "LOAD: CLAIM DNA",
    		Text = "WizzoWorkspace",
    		Button1 = "Okay",
    		Duration = 1
		})
local function FernEater()
	for _,v in pairs(workspace.GameMap.Gameland.Props:GetDescendants()) do
		local argsHunger = {
			[1] = v:FindFirstChild("Leaf")
		}
		workspace:WaitForChild("GameEvents"):FindFirstChild("EatPlant"):FireServer(unpack(argsHunger))
	end
end

--WATER
local function waterDrink()
    local currentPos = game.Players.LocalPlayer.Character:FindFirstChild('Head').Position
    for _, w in pairs(workspace.GameMap.Water:GetDescendants()) do
        if w.Name == "Water" then
                local args = {
                [1] = w,
                [2] = Vector3.new(currentPos.x, currentPos.y, currentPos.z)
            }
            workspace.GameEvents.addThirst:FireServer(unpack(args))
        end
    end
end

local function moveRegion()    
	local currentRegionBonusValue = workspace.ServerValues.ServerBonus.CurrentRegionBonus.Value
	local currentRegionBonus

	if type(currentRegionBonusValue) == "string" then
		currentRegionBonus = parseRegionBonus(currentRegionBonusValue)
	end

	local myRegion = game:GetService("Players").LocalPlayer.PlayerGui.Main.MainScript.System.SystemSettings.CurrentRegion.Value

	local function contains(tbl, value)
		for _, v in pairs(tbl) do
			if v == value then
				return true
			end
		end
		return false
	end

	for _, regionpath in pairs(game:GetService("ReplicatedStorage").Regions:GetDescendants()) do

		if contains(currentRegionBonus, regionpath.Name) then
			for _, trueregion in pairs(regionpath:GetDescendants()) do
				if trueregion.Name == "Region" then
					trueregion.CFrame = plr.CFrame
				end
			end
		else
			for _, nonregion in pairs(regionpath:GetDescendants()) do
				if nonregion.Name == "Region" then
					nonregion.CFrame = CFrame.new(0,0,0)
				end
			end
		end

	end
end

game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Script by WizzoWorkspace",
	Text = "https://www.youtube.com/@b1zzowizzo236",
	Button1 = "SUBSCRIBE!",
	Duration = 10
})

local function startCountdown()
    local endTime = tick() + 1050
    while tick() < endTime do
        local remaining = math.ceil(endTime - tick())
        wait(1)  -- Wait for 1 second
    end
    INF_STATS = false
	workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
    wait(16)
    print("WizzoWorkspace teleport attempt.")
    local ts = game:GetService("TeleportService")
	local p = game:GetService("Players").LocalPlayer
	ts:Teleport(game.PlaceId, p)
end

-- Start the countdown in a separate coroutine
repeat wait() until getgenv().autorejoin ~= nil
print("WizzoWorkspace loaded successfully.")
if autorejoin == true then
    coroutine.wrap(startCountdown)()
    print("Auto rejoin has been enabled.")
end


while INF_STATS == true do
	FernEater()
    waterDrink()
    moveRegion()
	wait(10)
end
